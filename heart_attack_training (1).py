# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oLYjAd-nhodpu8LDBbMCwLdO9NQlMkXu
"""

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
import pandas as pd
import warnings
warnings.filterwarnings("ignore")

df= pd.read_csv("/content/drive/MyDrive/heart.csv")
df.head()

df["target"].value_counts()
x=df.iloc[:,:-1]
y=df.iloc[:,-1]

model=RandomForestClassifier()
model.fit(x,y)
predict=model.predict(x)
print(accuracy_score(y,predict))

# Assuming you have the 'model' trained from the previous cells
# And you want to save it using a framework like joblib or pickle for high efficiency

import joblib
import pickle

# Using joblib (recommended for scikit-learn models)
joblib.dump(model, 'random_forest_model.joblib')
print("Model saved using joblib.")

# Alternatively, using pickle
with open('random_forest_model.pkl', 'wb') as f:
    pickle.dump(model, f)
print("Model saved using pickle.")